# ===============================
# = DATA SOURCE
# ===============================

#configurations de connexion pour la base de donneé

# connexion à la base de donnée
spring.datasource.url = jdbc:mysql://localhost:3306/logg_file_laposte
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# le nom d'utilisateur et mot de passe a acceder au bd
spring.datasource.username = root
spring.datasource.password = 

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# spring.jpa.properties.

# voir ou pas  les requttes sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): 
#avec "update" la base de donnée schemasera automatiquement mise à jour
spring.jpa.hibernate.ddl-auto = create

#le nom de  strategie utiliser
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# optimisation de requettes sql hibernate
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.jpa.properties.hibernate.id.new_generator_mappings = false
spring.jpa.properties.hibernate.format_sql = true

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE 
# port de connection pour accedé à la basee de donnée
server.port=8081
#tail pour que n'a pas le droit de dépasser au moment de l'enregestrement
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./uploads